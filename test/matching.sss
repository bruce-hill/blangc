
>>> if 5 matches 5
    yes
else
    no
=== yes

>>> if 5 matches 9
    -1
matches ?x
    x
=== 5

>>> if -0.0 matches 0.0 then yes else no
=== yes

>>> cases := [{1,2}, {3,4}, {5,6}]
>>> [
    for c in cases
        if c matches {1,2}
            "first"
        matches {?x,4}
            "has four and $x"
        matches ?other
            "otherwise $other"
]
=== ["first", "has four and 3", "otherwise {5, 6}"]

>>> if "two" matches "one" then 1
matches "two" then 2
matches ?other then -1
=== 2

type Vec := struct(x,y:Num)
type Foo := enum(int(i:Int)=5|num(n:Num)|str(s:Str)|vec(v:Vec)|tuple(tup:struct(_1:Num,_2:Num))|null|ptr(ptr:?Int))

>>> cases := [
    Foo.int(5), Foo.num(2.3),
    Foo.vec(Vec{1,2}), Foo.vec(Vec{2,3}), Foo.vec(Vec{99,100}),
    Foo.tuple({1,2}), Foo.tuple({2,3}), Foo.tuple({99,100}),
    Foo.null, Foo.str("xxx"), Foo.str("yyy"),
    Foo.ptr(@5), Foo.ptr(!Int), Foo.ptr(@6),
]
>>> [
    for f in cases
        >>> f
        if f matches int(?x); num(?x)
            "Int or num: $x"
        matches vec(Vec{1,2})
            "one-two Vec"
        matches vec(Vec{x=99})
            "99-x Vec"
        matches vec(Vec{x=1,y=?x})
            "one-x Vec: $x"
        matches vec(?v)
            "Vec: $v"
        matches tuple({1,2})
            "one-two tuple"
        matches tuple({99})
            "99-x tuple"
        matches tuple({1,?x})
            "one-x tuple: $x"
        matches tuple(?v)
            "tuple: $v"
        matches str("xxx")
            "Str of 'x'"
        matches ptr(@5)
            "Five ptr"
        matches ptr(@?x)
            "Nonnull ptr: $x"
        matches ptr(!Int)
            "Nil ptr"
        matches null
            "Null"
        matches ?other
            "Fallback: $other"
]
=== ["Int or num: 5", "Int or num: 2.3", "one-two Vec", "Vec: Vec{x=2, y=3}", "99-x Vec", "one-two tuple", "tuple: {2, 3}", "99-x tuple", "Null", "Str of 'x'", "Fallback: str(s=\"yyy\")", "Five ptr", "Nil ptr", "Nonnull ptr: 6"]

// Binding:
if f := Foo.str("abc") matches str
    >>> f
    === str(s="abc")
else
    fail "Unreachable"
