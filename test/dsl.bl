
>>> $JSON{{"inner":{"obj":[]}}}
=== $JSON"{\"inner\":{\"obj\":[]}}"

name := "Robert'; drop table students;--"

def s:String as $SQL
    return bitcast "\x1b[0;35m'$(s.replace("'","\x1b[34;1m''\x1b[0;35m"))'\x1b[m" as $SQL

def i:Int as $SQL return bitcast "\x1b[0;35m$i\x1b[m" as $SQL
def n:Num as $SQL return bitcast "\x1b[0;35m$n\x1b[m" as $SQL

age := 10
s := $SQL"SELECT * FROM students WHERE name = $name AND age > $age"
say (bitcast s as String)

def s:String as $Quoted
    return bitcast "\x1b[0;35m\"$(s.replace('\','\\').replace('"','\"'))\"\x1b[m" as $Quoted

str := "one two"
str2 := 'with "quotes" in it'
say (bitcast $Quoted[my strings are $str and $str2!] as String)

def s:String as $HTML
    s = s.replace("&", "\x1b[34;1m&amp;\x1b[0;35m")
         .replace("<", "\x1b[34;1m&lt;\x1b[0;35m")
         .replace(">", "\x1b[34;1m&gt;\x1b[0;35m")
         .replace('"', "\x1b[34;1m&quot;\x1b[0;35m")
         .replace("'", "\x1b[34;1m&#39;\x1b[0;35m")

    return bitcast "\x1b[0;35m$s\x1b[m" as $HTML

def strings:[String] as $HTML
    return bitcast [
        ++"<ol>\n",
        for str in strings
            c for c in $HTML[<li>$str</li>]
        between
            "\n"[1]
        ,
        ++"\n</ol>",
    ] as $HTML

def table:{String=>String} as $HTML
    return bitcast [
        ++"<table>\n",
        for e in table
            c for c in $HTML[<tr><td>$e.key</td><td>$e.value</td></tr>\n]
        ,
        ++"</table>",
    ] as $HTML

my_strings := ["item one", "I <3 escaping", "all done"]
my_table := {"key1"=>"value1", "key2"=>"value2"}
html := $HTML[
    <body>
    $my_strings
    $my_table
    </body>
]
say (bitcast html as String)
