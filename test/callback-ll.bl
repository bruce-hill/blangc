def NumberValue {

    def CallbackList {
        fn:(Num)=>Void
        next:?@CallbackList
    }

    _value:Num
    _callbacks:?@CallbackList

    def set(self:@NumberValue, value:Num)
        self._value = value
        callbacks := self._callbacks
        repeat
            cb := callbacks or stop
            fn := cb.fn
            fn(value)
            callbacks = cb.next

    def get(self:@NumberValue):Num
        return self._value

    def on_changed(self:@NumberValue, callback:((Num)=>Void)):((Num)=>Void)
        self._callbacks = ?@CallbackList{callback, next=self._callbacks}
        return callback
}

n := @NumberValue{1.5}
_ := n.on_changed((n:Num)=> say "callback 1: Changed to $n")
_ := n.on_changed((n:Num)=> say "callback 2: Changed to $n")
n.set(5.3)
