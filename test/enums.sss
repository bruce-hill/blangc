def Foo {| A | B | C | D |}

say "$(Foo.A)"
fail unless "$(Foo.A)" == "Foo.A"

for x in [Foo.A, Foo.B, Foo.C, Foo.D]
    when x is A
        say "$x is A!"
    is B
        say "$x is B!"
    is _
        say "$x is something else"

def Baz {|
    Text(String)
    Integer(Int)
    Vec2({x:Num,y:Num})
    Nil
|}

bazzes := [Baz.Text("hi"), Baz.Integer(5), Baz.Vec2({2.4, 4}), Baz.Nil]

for b in bazzes
    when b is Text(t)
        say "$t"
    is Integer(x); Vec2(x)
        say "$x"
    is Nil
        say "nil"

