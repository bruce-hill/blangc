// Wrapper for libcurl
!link -lcurl

enum ResultCode :=
    OK = 0 |
    UNSUPPORTED_PROTOCOL | FAILED_INIT | URL_MALFORMAT | NOT_BUILT_IN |
    COULDNT_RESOLVE_PROXY | COULDNT_RESOLVE_HOST | COULDNT_CONNECT |
    WEIRD_SERVER_REPLY | REMOTE_ACCESS_DENIED | FTP_ACCEPT_FAILED |
    FTP_WEIRD_PASS_REPLY | FTP_ACCEPT_TIMEOUT | FTP_WEIRD_PASV_REPLY |
    FTP_WEIRD_227_FORMAT | FTP_CANT_GET_HOST | HTTP2 | FTP_COULDNT_SET_TYPE |
    PARTIAL_FILE | FTP_COULDNT_RETR_FILE | OBSOLETE20 | QUOTE_ERROR |
    HTTP_RETURNED_ERROR | WRITE_ERROR | OBSOLETE24 | UPLOAD_FAILED |
    READ_ERROR | OUT_OF_MEMORY | OPERATION_TIMEDOUT | OBSOLETE29 |
    FTP_PORT_FAILED | FTP_COULDNT_USE_REST | OBSOLETE32 | RANGE_ERROR |
    HTTP_POST_ERROR | SSL_CONNECT_ERROR | BAD_DOWNLOAD_RESUME |
    FILE_COULDNT_READ_FILE | LDAP_CANNOT_BIND | LDAP_SEARCH_FAILED |
    OBSOLETE40 | FUNCTION_NOT_FOUND | ABORTED_BY_CALLBACK | BAD_FUNCTION_ARGUMENT |
    OBSOLETE44 | INTERFACE_FAILED | OBSOLETE46 | TOO_MANY_REDIRECTS |
    UNKNOWN_OPTION | SETOPT_OPTION_SYNTAX | OBSOLETE50 | OBSOLETE51 |
    GOT_NOTHING | SSL_ENGINE_NOTFOUND | SSL_ENGINE_SETFAILED | SEND_ERROR |
    RECV_ERROR | OBSOLETE57 | SSL_CERTPROBLEM | SSL_CIPHER | PEER_FAILED_VERIFICATION |
    BAD_CONTENT_ENCODING | OBSOLETE62 | FILESIZE_EXCEEDED | USE_SSL_FAILED |
    SEND_FAIL_REWIND | SSL_ENGINE_INITFAILED | LOGIN_DENIED | TFTP_NOTFOUND |
    TFTP_PERM | REMOTE_DISK_FULL | TFTP_ILLEGAL | TFTP_UNKNOWNID |
    REMOTE_FILE_EXISTS | TFTP_NOSUCHUSER | OBSOLETE75 | OBSOLETE76 |
    SSL_CACERT_BADFILE | REMOTE_FILE_NOT_FOUND | SSH | SSL_SHUTDOWN_FAILED |
    AGAIN | SSL_CRL_BADFILE | SSL_ISSUER_ERROR | FTP_PRET_FAILED | RTSP_CSEQ_ERROR |
    RTSP_SESSION_ERROR | FTP_BAD_FILE_LIST | CHUNK_FAILED | NO_CONNECTION_AVAILABLE |
    SSL_PINNEDPUBKEYNOTMATCH | SSL_INVALIDCERTSTATUS | HTTP2_STREAM | RECURSIVE_API_CALL |
    AUTH_ERROR | HTTP3 | QUIC_CONNECT_ERROR | PROXY | SSL_CLIENTCERT | UNRECOVERABLE_POLL

enum NetRC := Ignored=0 | Optional=1 | Required=2

enum Header :=
    WRITEDATA(?Void)=10001
    | URL(@CStringChar)=10002
    | PORT(Int64)=3
    | PROXY(@CStringChar)=10004
    | USERPWD(@CStringChar)=10005
    | PROXYUSERPWD(@CStringChar)=10006
    | RANGE(@CStringChar)=10007
    | READDATA(?Void)=10009
    | ERRORBUFFER(@Char)=10010
    | WRITEFUNCTION((@Char,Int64,Int64,?Void)->Int64)=20011
    | READFUNCTION((@Char,Int64,Int64,?Void)->Int64)=20012
    | TIMEOUT(Int64)=13
    | INFILESIZE(Int64)=14
    | POSTFIELDS(@CStringChar)=10015
    | REFERER(@CStringChar)=10016
    | FTPPORT(@CStringChar)=10017
    | USERAGENT(@CStringChar)=10018
    | LOW_SPEED_LIMIT(Int64)=19
    | LOW_SPEED_TIME(Int64)=20
    | RESUME_FROM(Int64)=21
    | COOKIE(@CStringChar)=10022
    | HTTPHEADER([@CStringChar])=10023
    | SSLCERT(@CStringChar)=10025
    | KEYPASSWD(@CStringChar)=10026
    | CRLF(Bool)=27
    | QUOTE([@CStringChar])=10028
    | HEADERDATA(?Void)=10029
    | COOKIEFILE(@CStringChar)=10031
    | SSLVERSION(Int64)=32
    | TIMECONDITION(Int64)=33
    | TIMEVALUE(Int64)=34
    | CUSTOMREQUEST(@CStringChar)=10036
    | STDERR(@Void)=10037
    | POSTQUOTE([@CStringChar])=10039
    | VERBOSE(Bool)=41
    | HEADER(Bool)=42
    | NOPROGRESS(Bool)=43
    | NOBODY(Bool)=44
    | FAILONERROR(Bool)=45
    | UPLOAD(Bool)=46
    | POST(Bool)=47
    | DIRLISTONLY(Bool)=48
    | APPEND(Bool)=50
    | NETRC(NetRC)=51
    | FOLLOWLOCATION(Bool)=52
    | TRANSFERTEXT(Bool)=53
    | XFERINFODATA(?Void)=10057
    | AUTOREFERER(Bool)=58
    | PROXYPORT(Int64)=59
    | POSTFIELDSIZE(Int64)=60
    | HTTPPROXYTUNNEL(Bool)=61
    | INTERFACE(@CStringChar)=10062
    | KRBLEVEL(@CStringChar)=10063
    | SSL_VERIFYPEER=64
    | CAINFO=10065
    | MAXREDIRS=68
    | FILETIME=69
    | TELNETOPTIONS=10070
    | MAXCONNECTS=71
    | OBSOLETE72=72
    | FRESH_CONNECT=74
    | FORBID_REUSE=75
    | CONNECTTIMEOUT=78
    | HEADERFUNCTION=20079
    | HTTPGET=80
    | SSL_VERIFYHOST=81
    | COOKIEJAR=10082
    | SSL_CIPHER_LIST=10083
    | HTTP_VERSION=84
    | FTP_USE_EPSV=85
    | SSLCERTTYPE=10086
    | SSLKEY=10087
    | SSLKEYTYPE=10088
    | SSLENGINE=10089
    | SSLENGINE_DEFAULT=90
    | DNS_CACHE_TIMEOUT=92
    | PREQUOTE=10093
    | DEBUGFUNCTION=20094
    | DEBUGDATA=10095
    | COOKIESESSION=96
    | CAPATH=10097
    | BUFFERSIZE=98
    | NOSIGNAL(Bool)=99
    | SHARE=10100
    | PROXYTYPE=101
    | ACCEPT_ENCODING=10102
    | PRIVATE=10103
    | HTTP200ALIASES=10104
    | UNRESTRICTED_AUTH=105
    | FTP_USE_EPRT=106
    | HTTPAUTH=107
    | SSL_CTX_FUNCTION=20108
    | SSL_CTX_DATA=10109
    | FTP_CREATE_MISSING_DIRS=110
    | PROXYAUTH=111
    | SERVER_RESPONSE_TIMEOUT=112
    | IPRESOLVE=113
    | MAXFILESIZE=114
    | INFILESIZE_LARGE=30115
    | RESUME_FROM_LARGE=30116
    | MAXFILESIZE_LARGE=30117
    | NETRC_FILE=10118
    | USE_SSL=119
    | POSTFIELDSIZE_LARGE=30120
    | TCP_NODELAY=121
    | FTPSSLAUTH=129
    | FTP_ACCOUNT=10134
    | COOKIELIST=10135
    | IGNORE_CONTENT_LENGTH=136
    | FTP_SKIP_PASV_IP=137
    | FTP_FILEMETHOD=138
    | LOCALPORT=139
    | LOCALPORTRANGE=140
    | CONNECT_ONLY=141
    | MAX_SEND_SPEED_LARGE=30145
    | MAX_RECV_SPEED_LARGE=30146
    | FTP_ALTERNATIVE_TO_USER=10147
    | SOCKOPTFUNCTION=20148
    | SOCKOPTDATA=10149
    | SSL_SESSIONID_CACHE=150
    | SSH_AUTH_TYPES=151
    | SSH_PUBLIC_KEYFILE=10152
    | SSH_PRIVATE_KEYFILE=10153
    | FTP_SSL_CCC=154
    | TIMEOUT_MS=155
    | CONNECTTIMEOUT_MS=156
    | HTTP_TRANSFER_DECODING=157
    | HTTP_CONTENT_DECODING=158
    | NEW_FILE_PERMS=159
    | NEW_DIRECTORY_PERMS=160
    | POSTREDIR=161
    | SSH_HOST_PUBLIC_KEY_MD5=10162
    | OPENSOCKETFUNCTION=20163
    | OPENSOCKETDATA=10164
    | COPYPOSTFIELDS=10165
    | PROXY_TRANSFER_MODE=166
    | SEEKFUNCTION((?Void,Int64,Int32)->Int32)=20167
    | SEEKDATA(?Void)=10168
    | CRLFILE=10169
    | ISSUERCERT=10170
    | ADDRESS_SCOPE=171
    | CERTINFO=172
    | USERNAME=10173
    | PASSWORD=10174
    | PROXYUSERNAME=10175
    | PROXYPASSWORD=10176
    | NOPROXY=10177
    | TFTP_BLKSIZE=178
    | SOCKS5_GSSAPI_NEC=180
    | SSH_KNOWNHOSTS=10183
    | SSH_KEYFUNCTION=20184
    | SSH_KEYDATA=10185
    | MAIL_FROM=10186
    | MAIL_RCPT=10187
    | FTP_USE_PRET=188
    | RTSP_REQUEST=189
    | RTSP_SESSION_ID=10190
    | RTSP_STREAM_URI=10191
    | RTSP_TRANSPORT=10192
    | RTSP_CLIENT_CSEQ=193
    | RTSP_SERVER_CSEQ=194
    | INTERLEAVEDATA=10195
    | INTERLEAVEFUNCTION=20196
    | WILDCARDMATCH(Bool)=197
    | CHUNK_BGN_FUNCTION=20198
    | CHUNK_END_FUNCTION=20199
    | FNMATCH_FUNCTION=20200
    | CHUNK_DATA=10201
    | FNMATCH_DATA=10202
    | RESOLVE=10203
    | TLSAUTH_USERNAME=10204
    | TLSAUTH_PASSWORD=10205
    | TLSAUTH_TYPE=10206
    | TRANSFER_ENCODING=207
    | CLOSESOCKETFUNCTION=20208
    | CLOSESOCKETDATA=10209
    | GSSAPI_DELEGATION=210
    | DNS_SERVERS=10211
    | ACCEPTTIMEOUT_MS=212
    | TCP_KEEPALIVE=213
    | TCP_KEEPIDLE=214
    | TCP_KEEPINTVL=215
    | SSL_OPTIONS=216
    | MAIL_AUTH=10217
    | SASL_IR=218
    | XFERINFOFUNCTION=20219
    | XOAUTH2_BEARER=10220
    | DNS_INTERFACE=10221
    | DNS_LOCAL_IP4=10222
    | DNS_LOCAL_IP6=10223
    | LOGIN_OPTIONS=10224
    | SSL_ENABLE_ALPN=226
    | EXPECT_100_TIMEOUT_MS=227
    | PROXYHEADER=10228
    | HEADEROPT=229
    | PINNEDPUBLICKEY=10230
    | UNIX_SOCKET_PATH=10231
    | SSL_VERIFYSTATUS=232
    | SSL_FALSESTART=233
    | PATH_AS_IS=234
    | PROXY_SERVICE_NAME=10235
    | SERVICE_NAME=10236
    | PIPEWAIT=237
    | DEFAULT_PROTOCOL=10238
    | STREAM_WEIGHT=239
    | STREAM_DEPENDS=10240
    | STREAM_DEPENDS_E=10241
    | TFTP_NO_OPTIONS=242
    | CONNECT_TO=10243
    | TCP_FASTOPEN=244
    | KEEP_SENDING_ON_ERROR=245
    | PROXY_CAINFO=10246
    | PROXY_CAPATH=10247
    | PROXY_SSL_VERIFYPEER=248
    | PROXY_SSL_VERIFYHOST=249
    | PROXY_SSLVERSION=250
    | PROXY_TLSAUTH_USERNAME=10251
    | PROXY_TLSAUTH_PASSWORD=10252
    | PROXY_TLSAUTH_TYPE=10253
    | PROXY_SSLCERT=10254
    | PROXY_SSLCERTTYPE=10255
    | PROXY_SSLKEY=10256
    | PROXY_SSLKEYTYPE=10257
    | PROXY_KEYPASSWD=10258
    | PROXY_SSL_CIPHER_LIST=10259
    | PROXY_CRLFILE=10260
    | PROXY_SSL_OPTIONS=261
    | PRE_PROXY=10262
    | PROXY_PINNEDPUBLICKEY=10263
    | ABSTRACT_UNIX_SOCKET=10264
    | SUPPRESS_CONNECT_HEADERS=265
    | REQUEST_TARGET=10266
    | SOCKS5_AUTH=267
    | SSH_COMPRESSION=268
    | MIMEPOST=10269
    | TIMEVALUE_LARGE=30270
    | HAPPY_EYEBALLS_TIMEOUT_MS=271
    | RESOLVER_START_FUNCTION=20272
    | RESOLVER_START_DATA=10273
    | HAPROXYPROTOCOL=274
    | DNS_SHUFFLE_ADDRESSES=275
    | TLS13_CIPHERS=10276
    | PROXY_TLS13_CIPHERS=10277
    | DISALLOW_USERNAME_IN_URL=278
    | DOH_URL=10279
    | UPLOAD_BUFFERSIZE=280
    | UPKEEP_INTERVAL_MS=281
    | CURLU=10282
    | TRAILERFUNCTION=20283
    | TRAILERDATA=10284
    | HTTP09_ALLOWED=285
    | ALTSVC_CTRL=286
    | ALTSVC=10287
    | MAXAGE_CONN=288
    | SASL_AUTHZID=10289
    | MAIL_RCPT_ALLLOWFAILS=290
    | SSLCERT_BLOB=40291
    | SSLKEY_BLOB=40292
    | PROXY_SSLCERT_BLOB=40293
    | PROXY_SSLKEY_BLOB=40294
    | ISSUERCERT_BLOB=40295
    | PROXY_ISSUERCERT=10296
    | PROXY_ISSUERCERT_BLOB=40297
    | SSL_EC_CURVES=10298
    | HSTS_CTRL=299
    | HSTS=10300
    | HSTSREADFUNCTION=20301
    | HSTSREADDATA=10302
    | HSTSWRITEFUNCTION=20303
    | HSTSWRITEDATA=10304
    | AWS_SIGV4=10305
    | DOH_SSL_VERIFYPEER=306
    | DOH_SSL_VERIFYHOST=307
    | DOH_SSL_VERIFYSTATUS=308
    | CAINFO_BLOB=40309
    | PROXY_CAINFO_BLOB=40310
    | SSH_HOST_PUBLIC_KEY_SHA256=10311
    | PREREQFUNCTION=20312
    | PREREQDATA=10313
    | MAXLIFETIME_CONN=314
    | MIME_OPTIONS=315
    | SSH_HOSTKEYFUNCTION=20316
    | SSH_HOSTKEYDATA=10317
    | PROTOCOLS_STR=10318
    | REDIR_PROTOCOLS_STR=10319
    | WS_OPTIONS=320
    | CA_CACHE_TIMEOUT=321
    | QUICK_EXIT=322

struct _CURL{}

func _write(data:@Char, size:Int64, nmemb:Int64, buf:@Str)->Int64
    buf ++= (bitcast {data,(size * nmemb) as Int32,1i16,0i16} as Str)
    return size*nmemb

enum Result := Success(Str) | Failure(ResultCode)

struct _CurlSList{}

func _curl(headers:[Header])->ResultCode
    curl := (extern curl_easy_init():?_CURL) or fail "Couldn't initialize CURL!"
    defer extern curl_easy_cleanup(curl)
    for header in headers
        if header is URL(url)
            extern curl_easy_setopt(curl, header as Int32, url)
        is WRITEFUNCTION(fn)
            extern curl_easy_setopt(curl, header as Int32, fn)
        is WRITEDATA(data)
            extern curl_easy_setopt(curl, header as Int32, data)
        is VERBOSE(val); HEADER(val)
            extern curl_easy_setopt(curl, header as Int32, (if val then 1 else 0))
        is HTTPHEADER(http_headers)
            list := !_CurlSList
            for h in http_headers
                list = extern curl_slist_append(list, h):?_CurlSList
            extern curl_easy_setopt(curl, header as Int32, list)
        is _
            fail "This header is not yet supported: $header"

    return extern curl_easy_perform(curl):ResultCode

func get(url:Str, headers=[:Header])->Result
    curl := (extern curl_easy_init():?_CURL) or fail "Couldn't initialize CURL!"
    defer extern curl_easy_cleanup(curl)
    buf := &""
    code := _curl(headers ++ [
        Header.URL(url),
        Header.WRITEFUNCTION(bitcast _write as (@Char,Int64,Int64,?Void)->Int64),
        Header.WRITEDATA(bitcast buf as ?Void),
    ])

    if code is OK
        return Result.Success(*buf)
    is _
        return Result.Failure(code)
